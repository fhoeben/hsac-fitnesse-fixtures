This test ensures we can deal with file upload inputs.

!define HTML { {{{
<html>
<body>
Choose file:
<input name="chosenFile" type="file">
<input name="chosenFile2" type="file">
<button>Upload</button>
</body>
</html>}}} }

|script      |mock xml server setup|
|add response|${HTML}              |
|$url=       |get mock server url  |

|script     |file fixture                        |
|$generated=|create|bye1.txt|containing|Bye Bye 1|



|script     |browser test                                |
|open       |$url                                        |
|note       |Select file for first file upload on page   |
|select file|$generated                                  |
|check      |value of  |name=chosenFile |=~/bye1.txt/    |
|check      |value of  |name=chosenFile2|!--!            |
|note       |Select file for specific file upload on page|
|select file|$generated|for             |name=chosenFile2|
|check      |value of  |name=chosenFile |=~/bye1.txt/    |
|check      |value of  |name=chosenFile2|=~/bye1.txt/    |


|script|mock xml server setup|
|stop                        |


