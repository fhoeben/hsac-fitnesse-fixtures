!contents -R2 -g -p -f -h
!*> We start a mock server to receive the binary file and display the request later (specify one response per request)

|script      |mock xml server setup    |
|add response|{{{<status>OK</status>}}}|
|add response|{{{<status>OK</status>}}}|
|add response|{{{<status>OK</status>}}}|
|add response|{{{<status>OK</status>}}}|
|$mockUrl=   |get mock server url      |

*!
Now we post files to the service. Note the different notation options. We can:

 * Use wiki-urls pointing to files in the files folder or below
 * Use relative paths (non links) from files folder (include files folder)

|script   |http test                                             |
|post file|http://files/httpPostExamples/testFile.txt|to|$mockUrl|
|post file|files/httpPostExamples/testFile.txt       |to|$mockUrl|
|post file|http://files/httpPostExamples/test.png    |to|$mockUrl|
|post file|files/httpPostExamples/test.png           |to|$mockUrl|

The Message report will show the received request:

|table: Mock Server Message Report|

!*> Stop the mock server

|script|mock xml server setup|
|stop                        |

*!