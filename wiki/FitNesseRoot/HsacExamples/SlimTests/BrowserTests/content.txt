!-BrowserTest-! defines a language (a DSL of sorts) to interact with a website via a browser. Normally a heuristic is used to find elements using end-user terms, leading to readable wiki pages describing tests, robust to technical changes in the site's HTML. But this heuristic may be bypassed in favor of [[technical selectors][>TechnicalSelectors]] to specify which element is meant. Furthermore !-BrowserTest-! retries finding elements (for a configurable time) if it cannot locate the immediately. This allows tests of dynamic web pages (where the page content is updated asynchronous using !-JavaScript-!) or using browsers where Selenium is not always able to determine whether a page load is complete (e.g. Safari).

The language supported by !-BrowserTest-! is defined by its public methods, which can be used in combination with Slim's standard script verbs (e.g. check, ensure, reject, show).
!-BrowserTest-!'s language will suffice for many tests, but can be extended by creating a custom subclass. 
A specific subclass (!-NgBrowserTest-!) is included to test [[!-AngularJs-!][https://angularjs.org]] sites. This class has functionality to find elements based on ‘models’, ‘bindings’ and ‘repeaters’ (borrowed from [[Protractor][http://angular.github.io/protractor/]]).

The tests in this suite show example usage of this fixture:
>ScriptTest shows the basic functionality of !-BrowserTest-! to test websites.
>ScenarioTest takes this to the next level by using a parameterized script (i.e. scenario).
The >TableTemplateTest simplifies the parameterization of the script.
>CustomFixtureTest shows the usage of a custom subclass of !-BrowserTest-! to make test content more descriptive by encapsulating knowledge of the site's HTML in Java code.
>StoryboardTest shows a test where a screenshot is taken after each action. This is then combined with a scenario in >TemplateStoryboardTest.
>ResizeTest shows some manipulation of the browser window.
>CheckboxRadiobuttonTest shows how to check values of radio buttons and checkboxes.
>AngularJsTest shows usage of !-BrowserTest-! testing [[!-AngularJs-!][https://angularjs.org]] applications. >AngularJsCalculatorTest takes it one step further, using !-NgBrowserTest-! to select elements by model, binding and repeater. >AngularUiSelectTest show a test interacting with [[!-AngularJs-! ui-select][https://github.com/angular-ui/ui-select]].
>HeuristicVsTechnicalSelectors contains a single test in two versions: using the heuristics and using technical selectors to give some more understanding of the difference between the two.

!2 Language

!3 !-BrowserTest-!

The main commands/keywords (i.e. public methods) offered by !-nl.hsac.fitnesse.fixture.slim.web.BrowserTest-! are listed below.
The heuristic to find places tries a number of translations of end user terms to Selenium 'find' commands (e.g. is a full or partial label given, a link's or button's text, a placeholder). The first find that results in an element on the page is used by !-BrowserTest-!.

-|Comment|
|open <url>                                                                |opens the specified URL                                                                                                                                                                                                                             |
|click <place>                                                             |performs mouse click at the designated place (e.g. link/button/checkbox/radio button)                                                                                                                                                               |
|click if available <place>                                                |performs mouse click at the designated place (e.g. link/button/checkbox/radio button). Does not throw an exception on timeout but returns !style_code[false], so can be used with script table's 'reject' verb to check something cannot be clicked.|
|enter <value> as <input>                                                  |clears the current value of an input and types the value                                                                                                                                                                                            |
|select <value> for <input>                                                |selects a value in the drop down box (or radio button)                                                                                                                                                                                              |
|available options for <input>                                             |retrieves all possible values for the drop down box                                                                                                                                                                                                 |
|type <text>                                                               |enters the supplied text in the currently active element                                                                                                                                                                                            |
|press <key>                                                               |sends press of a key (e.g. Tab, Enter, Escape, Space, M) to browser                                                                                                                                                                                 |
|clear <input>                                                             |removes the content in the input                                                                                                                                                                                                                    |
|take screenshot <name>                                                    |stores the current browser's content as <name><unique>.png (used in combination with 'show' verb)                                                                                                                                                   |
|page source                                                               |gets the current browser's content (used in combination with 'show' verb, the html is escaped and added to the wiki table)                                                                                                                          |
|save page source                                                          |stores the current browser's content as .html file (used in combination with 'show' verb, a link to the created file is added to the wiki table)                                                                                                    |
|value of <input>                                                          |retrieves the current value of the input (for use with 'check' verb or variable assignment)                                                                                                                                                         |
|values of <place>                                                         |retrieves all values of place, which is expected to be a 'select' or list                                                                                                                                                                           |
|number for <list item text>                                               |retrieves the number of the item (in a numbered list) with the supplied text                                                                                                                                                                        |
|page title                                                                |retrieves the current page's title (for use with 'check' verb)                                                                                                                                                                                      |
|is visible <place>                                                        |whether specified place is visible in browser's window (used in combination with 'ensure' and 'reject')                                                                                                                                             |
|is enabled <place>                                                        |whether specified place is enabled (i.e. can be clicked) (used in combination with 'ensure' and 'reject')                                                                                                                                           |
|scroll to <place>                                                         |scrolls the designated place into view                                                                                                                                                                                                              |
|hover over <place>                                                        |simulates hovering over the designated place with the mouse (so e.g. 'mouseover' behavior can be tested)                                                                                                                                            |
|wait for page title <title>                                               |waits until a page with the specified title is shown                                                                                                                                                                                                |
|wait for visible <place>                                                  |waits until the specified place (i.e. element) is visible in the browser                                                                                      |                                                                                     |
|seconds before page load timeout <value>                                  |sets how many seconds to wait for the browser to load the next page after a request before an exception is thrown                                                                                                                                   |
|seconds before page load timeout                                          |retrieves how many seconds is waited when loading a new page before an exception is thrown                                                                                                                                                          |
|seconds before timeout <value>                                            |sets how many seconds to wait on the browser before an exception is thrown                                                                                                                                                                          |
|seconds before timeout                                                    |retrieves how many seconds is waited before an exception is thrown                                                                                                                                                                                  |
|wait <seconds> (milli)seconds                                             |waits the specified number of (milli)seconds (e.g. for an animation to complete)                                                                                                                                                                    |
|location                                                                  |returns the current web address (i.e. URL of page)                                                                                                                                                                                                  |
|back                                                                      |goes back 1 page in the browser's history (i.e. clicks browser's back button)                                                                                                                                                                       |
|forward                                                                   |goes forward 1 page in the browser's history (i.e. clicks browser's forward button)                                                                                                                                                                 |
|refresh                                                                   |refreshes the current page (i.e. clicks the brower's refresh button)                                                                                                                                                                                |
|alert text                                                                |retrieves the text of the open !-JavaScript-! alert.                                                                                                                                                                                                |
|confirm alert                                                             |confirms the open !-JavaScript-! alert.                                                                                                                                                                                                             |
|dismiss alert                                                             |dismisses the open !-JavaScript-! alert.                                                                                                                                                                                                            |
|delete all cookies                                                        |deletes all cookies(for the domain of the current open page in the browser)                                                                                                                                                                         |
|clear local storage                                                       |clears HTML5's localStorage (for the domain of the current open page in the browser)                                                                                                                                                                |
|open in new tab <url>                                                     |opens the specified URL in a new tab, and switches to that tab                                                                                                                                                                                      |
|switch to next tab                                                        |Switches the browser's window to the next tab                                                                                                                                                                                                       |
|switch to previous tab                                                    |Switches the browser's window to the previous tab                                                                                                                                                                                                   |
|close tab                                                                 |Closes the current tab and switches the browser's window back to the previous one, if the browser has multiple tabs                                                                                                                                 |
|tab count                                                                 |How many tabs are open in the browser currently?                                                                                                                                                                                                    |
|current tab index                                                         |Which tab is currently displayed in the browser's window?                                                                                                                                                                                           |
|value of column number <columnIndex> in row number <rowIndex>             |retrieves the value from column number 'columnIndex' in row number 'rowIndex'                                                                                                                                                                       |
|value of <columnName> in row number <rowIndex>                            |retrieves the value from the column with header 'columnName' in row number 'rowIndex'                                                                                                                                                               |
|value of <columnName> in row where <selectColumn> is <selectValue>        |finds the first row where the column with header 'selectColumn' is 'selectValue' and retrieves the value from the column with header 'columnName'                                                                                                   |
|row exists where <selectColumn> is <selectValue>                          |determines whether there is a row where the column with header 'selectColumn' is 'selectValue'                                                                                                                                                      |
|click <place> in row number <rowIndex>                                    |clicks the button or link whose text matches 'place' in row number 'rowIndex'                                                                                                                                                                       |
|click <place> in row where <selectColumn> is <selectValue>                |finds the first row where the column with header 'selectColumn' is 'selectValue' and clicks the button or link whose text matches 'place'                                                                                                           |
|enter <value> as <columnName> in row where <selectColumn> is <selectValue>|finds the first row where the column with header 'selectColumn' is 'selectValue' and enters 'value' in the column with header 'columnName'                                                                                                          |
|download <link>                                                           |Downloads the target of the link (to the wiki's files section).                                                                                                                                                                                     |
|download content from <url>                                               |Downloads the file at the specified url (to the wiki's files section).                                                                                                                                                                              |
|select file <file>                                                        |Selects the supplied file using the first file input on the page. The file may be in the wiki's files section, or on the local file system.                                                                                                         |
|select file <file> for <file input>                                       |Selects the supplied file using the indicated input. The file may be in the wiki's files section, or on the local file system.                                                                                                                      |
|download <place> from row number <rowIndex>                               |Downloads the target of the link in column 'place', or with text 'place', in row number 'rowIndex'.                                                                                                                                                 |
|download <place> from row where <selectColumn> is <selectValue>           |Finds the first row where the column with header 'selectColumn' is 'selectValue' and downloads the target of the link in column 'place', or with text 'place'.                                                                                      |
|current browser width                                                     |Retrieves the current width of the browser's window (in pixels).                                                                                                                                                                                    |
|set browser width <newWidth>                                              |Sets the width of the browser's window to 'newWidth' (in pixels).                                                                                                                                                                                   |
|current browser height                                                    |Retrieves the current height of the browser's window (in pixels).                                                                                                                                                                                   |
|set browser height <newHeight>                                            |Sets the height of the browser's window to 'newHeight' (in pixels).                                                                                                                                                                                 |
|set browser size to <newWidth> by <newHeight>                             |Sets the size of the browser's window to 'newWidth' by 'newHeight' (in pixels).                                                                                                                                                                     |
|set implicit wait for angular to <true/false>                             |Controls whether !-BrowserTest-! should determine whether the site being tested uses !-AngularJs-! and if so, wait for Angular to finish rendering the page (default is 'false').                                                                   |
|switch to default content                                                 |Activates main/top-level (i)frame (i.e. makes it the current frame).                                                                                                                                                                                |
|switch to frame <technical selector>                                      |Activates child frame of current (i)frame found using 'technical selector'.                                                                                                                                                                         |
|switch to parent frame                                                    |Activates parent frame of current (i)frame. Does nothing if when current frame is the main/top-level one.                                                                                                                                           |
|set implicit find in frames to <true/false>                               |Controls whether !-BrowserTest-! should look for elements inside nested (i)frames if they cannot be found in the current frame (default is 'true').                                                                                                 |


!3 !-NgBrowserTest-!

!-nl.hsac.fitnesse.fixture.slim.web.NgBrowserTest-! ensures Angular is finished processing the page before trying to find elements or interact with them. Furthermore it adds finding elements by based on Angular bindings and models to the heuristic. Finally it adds some commands/keywords to !-BrowserTest's-!, the main ones are listed below.

-|Comment|
|number of <repeater>                                                            |Counts the number of elements created by the 'repeater' (e.g. 'cat in cats').                                                                                                                               |
|value of <columnName> in row where <selectColumn> is <selectValue> of <repeater>|Retrieves the value of the column with the 'columnName' header in the first row where the column with header 'selectColumn' is 'selectValue' of a table generated by 'repeater'.                            |
|value of <columnName> in row number <rowIndex> of <repeater>                    |Retrieves the value of the column with the specified header in the specified row of a table generated by 'repeater'.                                                                                        |
|value of column number <columnIndex> in row number <rowIndex> of <repeater>     |Retrieves the value of the specified column and row of a table generated by 'repeater'.                                                                                                                     |
|wait for Angular requests to finish                                             |Explicitly wait for Angular to finish rendering the page (should not be needed normally, as the other commands ensure this is done, unless 'set implicit wait for angular to' has been called with 'false').|
|set Angular root <selector>                                                     |Defines the CSS selector to find the root element containing the Angular application.                                                                                                                       |
